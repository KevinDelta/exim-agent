[project]
name = "acc-llamaindex"
version = "0.1.0"
description = "This is a template for creating powerful Agent APIs."
readme = "README.md"
classifiers = [
    # TODO
]
license = {text = "MIT"}
dependencies = [
  "typer",
  "fastapi[standard]",
  "loguru",
  "pydantic>=2.0.0,<2.11.0",
  "pydantic-settings",
  "ipykernel",
  "openai>=1.109.1",
  "chromadb>=1.1.0",
  "pandas>=2.2.3",
  "python-dotenv>=1.1.1",
  "matplotlib>=3.10.6",
  "langchain>=1.0.0a14",
  "langchain-openai>=0.3.34",
  "langchain-chroma>=0.3.0",
  "langchain-community>=0.3.0",
  "langchain-text-splitters>=0.3.0",
  "langgraph>=0.2.62",
  "langsmith>=0.4.34",
  "langchain-core>=0.3.34",
  "ipython>=8.37.0",
  "langchain-ollama>=0.3.10",
  "unstructured>=0.10.0",
  "pypdf>=3.17.0",
  "langchain-anthropic>=0.3.21",
  "langchain-groq>=1.0.0a1",
  "sentence-transformers>=2.2.0",
  "zenml[server]>=0.70.0,<0.90.0",
  "mlflow>=2.0.0",
  "mem0ai>=1.0.0",
  "httpx>=0.28.1",
  "beautifulsoup4>=4.14.2",
]
requires-python = ">= 3.10"

[dependency-groups]
dev = [
    "coverage",
    "pre-commit",
    "pytest",
    "ruff",
]

[project.scripts]
acc_llamaindex = "acc_llamaindex.cli:app"

[tool.ty]
# All rules are enabled as "error" by default; no need to specify unless overriding.
# Example override: relax a rule for the entire project (uncomment if needed).
# rules.TY015 = "warn"  # For invalid-argument-type, warn instead of error.

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]

[tool.uv]
package = true
